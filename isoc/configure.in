dnl ## Process this file with autoconf to produce a configure script.
dnl ## Initialize the automake stuff

AC_INIT([isoc],[1.0],[uwe@uwemeding.com])

PACKAGE=isoc
VERSION=1.0
EMAIL=uwe@uwemeding.com


echo Configuring ISOC version $VERSION
dnl

dnl -- Initialize the automake stuff
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl -- Create the configuration header
AM_MAINTAINER_MODE

AC_ENABLE_SHARED
AC_DISABLE_STATIC

AC_CONFIG_MACRO_DIR([m4])
LT_INIT

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_LIBTOOL


AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS( \
    ctype.h \
    errno.h \
    malloc.h \
    stdarg.h \
    stdio.h \
    stdlib.h \
    string.h \
    math.h \
    setjmp.h )

dnl ###########################################################
dnl # debug compilation support
dnl ###########################################################
AC_MSG_CHECKING([whether to build with debugging support])
AC_ARG_ENABLE([debug],
    [AS_HELP_STRING([--enable-debug],
        [enable debug data generation (default=no)])],
    [debugit="$enableval"],
    [debugit=no])
AC_MSG_RESULT([$debugit])

if test x"$debugit" = x"yes"; then
    AC_DEFINE([DEBUG],[],[Debug Mode])
    AM_CXXFLAGS="$AM_CXXFLAGS -g -Wall -Werror -Wno-uninitialized"
else
    AC_DEFINE([NDEBUG],[],[No-debug mode])
    AM_CXXFLAGS="$AM_CXXFLAGS -O3"
fi

dnl ###########################################################
dnl # check Java JNI support
dnl ###########################################################


AC_MSG_CHECKING([Java support])
AC_ARG_WITH([java],
    [AS_HELP_STRING([--with-java=/path/to/java/home],
        [try this if JAVA_HOME is not set])],
    [javaset=yes],
    [javaset=no])
if test x"$javaset" = x"yes" ; then
    JAVA_HOME=$with_java
fi
if test x"$JAVA_HOME" = x"" ; then
    AC_MSG_RESULT([no])
    AC_MSG_ERROR([JAVA_HOME: not found, setup environment or use --with-java=...])
else
    AC_MSG_RESULT([yes])
    AC_MSG_NOTICE([Using JAVA_HOME=$JAVA_HOME])

    dnl ## Determine the architecture and platform
    case $ac_build_alias in
         x86_64*) JVM_ARCH=amd64 ;;
         i?86*)   JVM_ARCH=i386 ;;
         *)      JVM_ARCH=$target_cpu ;;
    esac

    case $ac_build_alias in
         *-linux-*) JVM_PLAT=linux ;;
         *-sparc-*) JVM_PLAT=sparc ;;
         *)      JVM_PLAT=$target_platform ;;
    esac

    dnl ## save the c/c++ flags
    OLD_CFLAGS=$CFLAGS
    OLD_CXXFLAGS=$CXXFLAGS

    dnl ## Make sure everything works as expected
    CFLAGS="-I$JAVA_HOME/include -I$JAVA_HOME/include/$JVM_PLAT"
    CXXFLAGS="-I$JAVA_HOME/include -I$JAVA_HOME/include/$JVM_PLAT"
    JVM_LIB_PATH="$JAVA_HOME/jre/lib/$JVM_ARCH"

    AC_CHECK_HEADER([jni.h], [have_jni=yes])
    AC_ARG_VAR([JAVA_HOME], [Java Runtime Environment (JRE) location])
    AC_ARG_ENABLE([java-feature],
                  [AC_HELP_STRING([--disable-java-feature],
                                  [disable Java feature])])

    AC_SUBST([JVM_ARCH])
    AS_IF([test X$enable_java_feature != Xno],
        [AS_IF([test X$have_jni != Xyes],
            [AC_MSG_FAILURE([The Java Native Interface is required for Java feature.])])
         AS_IF([test -z "$JAVA_HOME"],
            [AC_MSG_WARN([JAVA_HOME has not been set.  JAVA_HOME must be set at run time to locate libjvm.])],
            [save_LDFLAGS=$LDFLAGS
             LDFLAGS="-L$JVM_LIB_PATH -L$JVM_LIB_PATH/server $LDFLAGS"
         AC_CHECK_LIB([jvm], [JNI_CreateJavaVM], [LIBS=$LIBS],
             [AC_MSG_WARN([no libjvm found at JAVA_HOME])])
         LDFLAGS=$save_LDFLAGS])]) 

    dnl ## set the compile flags, also include the local platform
    dnl ## specific stuff

    AM_CXXFLAGS="$AM_CXXFLAGS -I$JAVA_HOME/include -I$JAVA_HOME/include/$JVM_PLAT -I$JVM_PLAT" 
    AM_CFLAGS="$AM_CFLAGS -I$JAVA_HOME/include -I$JAVA_HOME/include/$JVM_PLAT -I$JVM_PLAT"
    AM_LDFLAGS="-L$JVM_LIB_PATH -L$JVM_LIB_PATH/server $AM_LDFLAGS"

    dnl ## restore the old c/c++ flags
    CFLAGS=$OLD_CFLAGS
    CXXFLAGS=$OLD_CXXFLAGS

fi

dnl ## forward the substitutions
CFLAGS=""
CXXFLAGS=""

AC_SUBST([LIBS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_CFLAGS])
AC_SUBST([AM_LDFLAGS])

dnl AC_CONFIG_FILES([Makefile])
AC_OUTPUT( \
    Makefile \
    src/Makefile )
